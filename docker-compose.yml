version: '3.8'

services:
  # Frontend React
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3001/api
      - NODE_ENV=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - energy-dashboard

  # Backend Node.js
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - ORACLE_USER=${ORACLE_USER:-energy_user}
      - ORACLE_PASSWORD=${ORACLE_PASSWORD:-energy_password}
      - ORACLE_CONNECTION_STRING=${ORACLE_CONNECTION_STRING:-localhost:1521/energy_db}
      - ORACLE_POOL_MIN=${ORACLE_POOL_MIN:-2}
      - ORACLE_POOL_MAX=${ORACLE_POOL_MAX:-10}
      - JWT_SECRET=${JWT_SECRET:-your-secret-key}
      - FRONTEND_URL=http://localhost:3000
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./logs:/app/logs
    depends_on:
      - oracle
    networks:
      - energy-dashboard

  # Base de datos Oracle (para desarrollo)
  oracle:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    ports:
      - "1521:1521"
      - "5500:5500"
    environment:
      - ORACLE_PWD=${ORACLE_PASSWORD:-energy_password}
      - ORACLE_CHARACTERSET=AL32UTF8
    volumes:
      - oracle_data:/opt/oracle/oradata
      - oracle_backup:/opt/oracle/backup
    networks:
      - energy-dashboard
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "sys/${ORACLE_PASSWORD:-energy_password}@//localhost:1521/XE", "AS", "SYSDBA", "@healthcheck.sql"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Nginx (proxy reverso para producción)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - backend
    networks:
      - energy-dashboard
    profiles:
      - production

  # Redis (caché y sesiones)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - energy-dashboard
    profiles:
      - production

  # PM2 (gestor de procesos para producción)
  pm2:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    environment:
      - NODE_ENV=production
      - PM2_HOME=/app/.pm2
    volumes:
      - ./backend:/app
      - /app/node_modules
      - ./logs:/app/logs
    depends_on:
      - backend
    networks:
      - energy-dashboard
    profiles:
      - production

volumes:
  oracle_data:
    driver: local
  oracle_backup:
    driver: local
  redis_data:
    driver: local

networks:
  energy-dashboard:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

